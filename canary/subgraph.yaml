specVersion: 0.0.2
schema:
  file: ./schema.graphql
dataSources:
  - name: APM
    kind: ethereum/contract
    network: mainnet
    source:
      abi: APMRegistryFactory
      address: '0xce5c6811bd801aa0cf72760534604f833cbcc0b9'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/apm.ts
      abis:
        - name: APMRegistryFactory
          file: ./abis/factory/APMRegistryFactory.json
      entities:
        - PackageRegistry
      eventHandlers:
        - event: DeployAPM(indexed bytes32,address)
          handler: handleDeployAPM

  - name: AragonID
    kind: ethereum/contract
    network: mainnet
    source:
      abi: FIFSResolvingRegistrar
      address: '0x546aa2eae2514494eeadb7bbb35243348983c59d'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/ens.ts
      entities:
        - AragonIdentity
      abis:
        - name: FIFSResolvingRegistrar
          file: ./abis/ens/FIFSResolvingRegistrar.json
      eventHandlers:
        - event: ClaimSubdomain(indexed bytes32,indexed address,indexed address)
          handler: handleClaimSubdomain

  #
  # DAO Factories
  #

  # Aragon 0.6
  - name: DAO/factories/0.6
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DAOFactory
      address: '0x595b34c93aa2c2ba0a38daeede629a0dfbdcc559'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/dao/factory.ts
      entities:
        - Dao
        - DaoFactory
      abis:
        - name: DAOFactory
          file: ./abis/factory/DAOFactory.json
      eventHandlers:
        - event: DeployDAO(address)
          handler: handleDeployDAO_0_6

  # Aragon 0.7
  - name: DAO/factories/0.7
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DAOFactory
      address: '0xc29f0599df12eb4cbe1a34354c4bac6d944071d1'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/dao/factory.ts
      entities:
        - Dao
        - DaoFactory
      abis:
        - name: DAOFactory
          file: ./abis/factory/DAOFactory.json
      eventHandlers:
        - event: DeployDAO(address)
          handler: handleDeployDAO_0_7

  # Aragon 0.8
  - name: DAO/factories/0.8
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DAOFactory
      address: '0xb9da44c051c6cc9e04b7e0f95e95d69c6a6d8031'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/dao/factory.ts
      entities:
        - Dao
        - DaoFactory
      abis:
        - name: DAOFactory
          file: ./abis/factory/DAOFactory.json
      eventHandlers:
        - event: DeployDAO(address)
          handler: handleDeployDAO_0_8

  #
  # DAO Templates/Kits
  #

  # democracy-kit-1.0.0  (Aragon 0.6)
  - name: DAO/templates/democracy-1
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DemocracyKit
      address: '0x705Cd9a00b87Bb019a87beEB9a50334219aC4444'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/democracy-1.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: DemocracyKit
          file: ./abis/dao-kits/DemocracyKit-1.json
      eventHandlers:
        - event: DeployInstance(address,indexed address)
          handler: handleDeployInstance
      callHandlers:
        - function: newInstance(string,address[],uint256[],uint64,uint64,uint64)
          handler: handleNewInstance
        - function: newTokenAndInstance(string,string,address[],uint256[],uint64,uint64,uint64)
          handler: handleNewTokenAndInstance

  # democracy-kit-2.0.0 (Aragon 0.7)
  - name: DAO/templates/democracy-2
    kind: ethereum/contract
    network: mainnet
    source:
      abi: DemocracyKit
      address: '0x7f3ed10366826a1227025445D4f4e3e14BBfc91d'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/democracy-2.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: DemocracyKit
          file: ./abis/dao-kits/DemocracyKit-2.json
      eventHandlers:
        - event: DeployInstance(address,indexed address)
          handler: handleDeployInstance
      callHandlers:
        - function: newInstance(string,address[],uint256[],uint64,uint64,uint64)
          handler: handleNewInstance
        - function: newTokenAndInstance(string,string,string,address[],uint256[],uint64,uint64,uint64)
          handler: handleNewTokenAndInstance

  # multisig-kit-1.0.0 (Aragon 0.6)
  - name: DAO/templates/multisig-1
    kind: ethereum/contract
    network: mainnet
    source:
      abi: MultisigKit
      address: '0x41bbaf498226b68415f1C78ED541c45A18fd7696'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/multisig-1.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: MultisigKit
          file: ./abis/dao-kits/MultisigKit-1.json
      eventHandlers:
        - event: DeployInstance(address,indexed address)
          handler: handleDeployInstance
      callHandlers:
        - function: newInstance(string,address[],uint256)
          handler: handleNewInstance
        - function: newTokenAndInstance(string,string,address[],uint256)
          handler: handleNewTokenAndInstance

  # multisig-kit-2.0.0 (Aragon 0.7)
  - name: DAO/templates/multisig-2
    kind: ethereum/contract
    network: mainnet
    source:
      abi: MultisigKit
      address: '0x87aa2980dde7d2D4e57191f16BB57cF80bf6E5A6'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/multisig-2.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: MultisigKit
          file: ./abis/dao-kits/MultisigKit-2.json
      eventHandlers:
        - event: DeployInstance(address,indexed address)
          handler: handleDeployInstance
      callHandlers:
        - function: newInstance(string,address[],uint256)
          handler: handleNewInstance
        - function: newTokenAndInstance(string,string,string,address[],uint256)
          handler: handleNewTokenAndInstance

  # company-template-1.0.0 (Aragon 0.8)
  - name: DAO/templates/company
    kind: ethereum/contract
    network: mainnet
    source:
      abi: CompanyTemplate
      address: '0xd737632caC4d039C9B0EEcc94C12267407a271b5'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/company.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: CompanyTemplate
          file: ./abis/dao-templates/CompanyTemplate.json
      callHandlers:
        - function: newInstance(string,address[],uint256[],uint64[3],uint64,bool)
          handler: handleNewInstance
        - function: newInstance(string,address[],uint256[],uint64[3],uint64,bool,uint256[4])
          handler: handleNewInstanceWithPayroll
        - function: newTokenAndInstance(string,string,string,address[],uint256[],uint64[3],uint64,bool)
          handler: handleNewTokenAndInstance

  # company-board-template-1.0.0 (Aragon 0.8)
  - name: DAO/templates/company-board
    kind: ethereum/contract
    network: mainnet
    source:
      abi: CompanyBoardTemplate
      address: '0x4d1A892f42c947fa952b57bc6939b27A96215CfA'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/company-board.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: CompanyBoardTemplate
          file: ./abis/dao-templates/CompanyBoardTemplate.json
      callHandlers:
        - function: finalizeInstance(string,address[],uint256[],address[],uint64,bool)
          handler: handleFinalizeInstance
        - function: finalizeInstance(string,address[],uint256[],address[],uint64,bool,uint256[4])
          handler: handleFinalizeInstanceWithPayroll

  # membership-template-2.0.0 (Aragon 0.8)
  - name: DAO/templates/membership
    kind: ethereum/contract
    network: mainnet
    source:
      abi: MembershipTemplate
      address: '0x67430642C0c3B5E6538049B9E9eE719f2a4BeE7c'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/membership.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: MembershipTemplate
          file: ./abis/dao-templates/MembershipTemplate.json
      callHandlers:
        - function: newInstance(string,address[],uint64[3],uint64,bool)
          handler: handleNewInstance
        - function: newInstance(string,address[],uint64[3],uint64,bool,uint256[4])
          handler: handleNewInstanceWithPayroll
        - function: newTokenAndInstance(string,string,string,address[],uint64[3],uint64,bool)
          handler: handleNewTokenAndInstance

  # reputation-template-1.0.0 (Aragon 0.8)
  - name: DAO/templates/reputation
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ReputationTemplate
      address: '0x3a06A6544e48708142508D9042f94DDdA769d04F'
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      file: ./src/mappings/dao/templates/reputation.ts
      language: wasm/assemblyscript
      entities:
        - AragonIdentity
        - Dao
      abis:
        - name: ReputationTemplate
          file: ./abis/dao-templates/ReputationTemplate.json
      callHandlers:
        - function: newInstance(string,address[],uint256[],uint64[3],uint64,bool)
          handler: handleNewInstance
        - function: newInstance(string,address[],uint256[],uint64[3],uint64,bool,uint256[4])
          handler: handleNewInstanceWithPayroll
        - function: newTokenAndInstance(string,string,string,address[],uint256[],uint64[3],uint64,bool)
          handler: handleNewTokenAndInstance

templates:
  - name: ACL
    kind: ethereum/contract
    network: mainnet
    source:
      abi: ACL
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/acl.ts
      abis:
        - name: ACL
          file: ./abis/acl/ACL.json
      entities:
        - Permission
      eventHandlers:
        - event: SetPermission(indexed address,indexed address,indexed bytes32,bool)
          handler: handleSetPermission
        - event: SetPermissionParams(indexed address,indexed address,indexed bytes32,bytes32)
          handler: handleSetPermissionParams
        - event: ChangePermissionManager(indexed address,indexed bytes32,indexed address)
          handler: handleChangePermissionManager
  - name: APMRegistry
    kind: ethereum/contract
    network: mainnet
    source:
      abi: APMRegistry
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/apm.ts
      entities:
        - Package
      abis:
        - name: APMRegistry
          file: ./abis/apm/APMRegistry.json
      eventHandlers:
        - event: NewRepo(bytes32,string,address)
          handler: handleNewRepo
  - name: Kernel
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Kernel
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/kernel.ts
      entities:
        - FinanceApp
        - TokenManagerApp
        - VotingApp
      abis:
        - name: Kernel
          file: ./abis/kernel/Kernel.json
        - name: Finance
          file: ./abis/apps/Finance.json
        - name: TokenManager
          file: ./abis/apps/TokenManager.json
        - name: Voting
          file: ./abis/apps/Voting.json
      eventHandlers:
        - event: NewAppProxy(address,bool,bytes32)
          handler: handleNewAppProxy
        - event: SetApp(indexed bytes32,indexed bytes32,address)
          handler: handleSetApp
  - name: Repo
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Repo
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/apm.ts
      entities:
        - PackageVersion
      abis:
        - name: Repo
          file: ./abis/apm/Repo.json
      eventHandlers:
        - event: NewVersion(uint256,uint16[3])
          handler: handleNewVersion
  - name: Finance
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Finance
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/apps/finance.ts
      entities:
        - Payment
        - Period
        - TokenBudget
        - IncomingTransaction
        - OutgoingTransaction
      abis:
        - name: Finance
          file: ./abis/apps/Finance.json
      eventHandlers:
        - event: NewPeriod(indexed uint64,uint64,uint64)
          handler: handleNewPeriod
        - event: SetBudget(indexed address,uint256,bool)
          handler: handleSetBudget
        - event: NewPayment(indexed uint256,indexed address,uint64,string)
          handler: handleNewPayment
        - event: NewTransaction(indexed uint256,bool,indexed address,uint256,string)
          handler: handleNewTransaction
        - event: ChangePaymentState(indexed uint256,bool)
          handler: handleChangePaymentState
        - event: ChangePeriodDuration(uint64)
          handler: handleChangePeriodDuration
        - event: PaymentFailure(uint256)
          handler: handlePaymentFailure
        - event: ScriptResult(indexed address,bytes,bytes,bytes)
          handler: handleScriptResult
        - event: RecoverToVault(indexed address,indexed address,uint256)
          handler: handleRecoverToVault
  - name: TokenManager
    kind: ethereum/contract
    network: mainnet
    source:
      abi: TokenManager
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/apps/token-manager.ts
      entities:
        - Vesting
      abis:
        - name: TokenManager
          file: ./abis/apps/TokenManager.json
      eventHandlers:
        - event: NewVesting(indexed address,uint256,uint256)
          handler: handleNewVesting
        - event: RevokeVesting(indexed address,uint256,uint256)
          handler: handleRevokeVesting
        - event: ScriptResult(indexed address,bytes,bytes,bytes)
          handler: handleScriptResult
        - event: RecoverToVault(indexed address,indexed address,uint256)
          handler: handleRecoverToVault
  - name: Voting
    kind: ethereum/contract
    network: mainnet
    source:
      abi: Voting
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.3
      language: wasm/assemblyscript
      file: ./src/mappings/apps/voting.ts
      entities:
        - Vote
        - SupportVote
        - NonSupportVote
      abis:
        - name: Voting
          file: ./abis/apps/Voting.json
      eventHandlers:
        - event: StartVote(indexed uint256,indexed address,string)
          handler: handleStartVote
        - event: CastVote(indexed uint256,indexed address,bool,uint256)
          handler: handleCastVote
        - event: ExecuteVote(indexed uint256)
          handler: handleExecuteVote
        - event: ChangeSupportRequired(uint64)
          handler: handleChangeSupportRequired
        - event: ChangeMinQuorum(uint64)
          handler: handleChangeMinQuorum
        - event: ScriptResult(indexed address,bytes,bytes,bytes)
          handler: handleScriptResult
        - event: RecoverToVault(indexed address,indexed address,uint256)
          handler: handleRecoverToVault
