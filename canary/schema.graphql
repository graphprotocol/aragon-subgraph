type AragonIdentity @entity {
  id: ID!
  ensResolver: Bytes!
  entity: Bytes!
}

type Dao @entity {
  id: ID! # DAO address
  address: Bytes!
  factory: DaoFactory!
  name: String
  template: DaoTemplateType
  templateAddress: Bytes
  token: Bytes

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

type DaoFactory @entity {
  id: ID! # DAOFactory address
  address: Bytes!
  name: String
  daoCount: BigInt!

  lastUpdatedBlock: BigInt

  daos: [Dao!]! @derivedFrom(field: "factory")
}

enum DaoTemplateType {
  # Aragon 0.7 and prior
  DEMOCRACY
  MULTISIG

  # Aragon 0.8
  COMPANY
  COMPANY_BOARD
  MEMBERSHIP
  REPUTATION
}

#
# APM
#

type PackageRegistry @entity {
  id: ID!
  address: Bytes!
  node: Bytes!

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

type Package @entity {
  id: ID!
  address: Bytes!
  name: String!
  registry: PackageRegistry!
  versions: [PackageVersion!]! @derivedFrom(field: "pkg")

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

type PackageVersion @entity {
  id: ID!
  pkg: Package!
  version: String!
  contract: Bytes!
  contentURI: String!

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

#
# Apps
#

interface AppProxy {
  id: ID!
  appId: Bytes!
  proxyAddress: Bytes!
}

#
# App: Agent
#

type AgentAppProxy implements AppProxy @entity {
  id: ID! # <appProxyAddress>
  appId: Bytes!
  proxyAddress: Bytes!
}

#
# App: Finance
#

type FinanceAppProxy implements AppProxy @entity {
  id: ID! # <appProxyAddress>
  appId: Bytes!
  proxyAddress: Bytes!

  budgets: [TokenBudget!]! @derivedFrom(field: "app")

  payments: [Payment!]! @derivedFrom(field: "app")

  periods: [Period!]! @derivedFrom(field: "app")

  transactions: [Transaction!]! @derivedFrom(field: "app")
  incomingTransactions: [IncomingTransaction!]! @derivedFrom(field: "app")
  outgoingTransactions: [OutgoingTransaction!]! @derivedFrom(field: "app")
}

type Payment @entity {
  id: ID! # <appProxyAddress>-<paymentId>
  app: FinanceAppProxy
  recipient: Bytes!
  maxExecutions: BigInt!
  reference: String

  active: Boolean!

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

type Period @entity {
  id: ID! # <appProxyAddress>-<periodId>
  app: FinanceAppProxy!
  start: BigInt!
  end: BigInt!
}

type TokenBudget @entity {
  id: ID! # <appProxyAddress>-<tokenAddress>
  app: FinanceAppProxy
  token: Bytes!
  amount: BigInt!
}

interface Transaction {
  id: ID!
  app: FinanceAppProxy!
  entity: Bytes!
  amount: BigInt!
  reference: String

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

type IncomingTransaction implements Transaction @entity {
  id: ID! # <appProxyAddress>-INCOMING-<transactionId>
  app: FinanceAppProxy!
  entity: Bytes!
  amount: BigInt!
  reference: String

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

type OutgoingTransaction implements Transaction @entity {
  id: ID! # <appProxyAddress>-OUTGOING-<transactionId>
  app: FinanceAppProxy!
  entity: Bytes!
  amount: BigInt!
  reference: String

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!
}

#
# App: Payroll
#

type PayrollAppProxy implements AppProxy @entity {
  id: ID! # <appProxyAddress>
  appId: Bytes!
  proxyAddress: Bytes!
}

#
# App: Survey
#

type SurveyAppProxy implements AppProxy @entity {
  id: ID! # <appProxyAddress>
  appId: Bytes!
  proxyAddress: Bytes!
}

type Survey @entity {
  id: ID!
  app: SurveyAppProxy!
  creator: Bytes!
  metadata: String!

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!

  updated: BigInt!
}

#
# App: Token Manager
#

type TokenManagerAppProxy implements AppProxy @entity {
  id: ID! # <appProxyAddress>
  appId: Bytes!
  proxyAddress: Bytes!

  vestings: [Vesting!]! @derivedFrom(field: "app")
}

type Vesting @entity {
  id: ID! # <appProxyAddress>-<vestingId>
  app: TokenManagerAppProxy!
  receiver: Bytes!
  vestingId: BigInt!
}

#
# App: Vault
#

type VaultAppProxy implements AppProxy @entity {
  id: ID! # <appProxyAddress>
  appId: Bytes!
  proxyAddress: Bytes!
}

#
# App: Voting
#

type VotingAppProxy implements AppProxy @entity {
  id: ID! # <appProxyAddress>
  appId: Bytes!
  proxyAddress: Bytes!

  minQuorumPercent: BigInt!
  supportRequiredPercent: BigInt!

  votes: [Vote!]! @derivedFrom(field: "app")
}

type Vote @entity {
  id: ID! # <appProxyAddress>-<voteId>
  app: VotingAppProxy!
  creator: Bytes!
  metadata: String!
  executed: Boolean!

  supporters: [SupportVote!]! @derivedFrom(field: "voteId")
  nonSupporters: [NonSupportVote!]! @derivedFrom(field: "voteId")

  created: BigInt!
  createdAtBlock: BigInt!
  createdAtTransaction: Bytes!

  updated: BigInt!
}

type SupportVote @entity {
  id: ID! # <appProxyAddress>-<voteId>-<voterAddress>-YES-<txHash>
  app: VotingAppProxy!
  voteId: Vote
  voter: Bytes!
  stake: BigInt!
}

type NonSupportVote @entity {
  id: ID! # <appProxyAddress>-<voteId>-<voterAddress>-NO-<txHash>
  app: VotingAppProxy!
  voteId: Vote
  voter: Bytes!
  stake: BigInt!
}
